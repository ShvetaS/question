#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CATapp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="catappdb")]
	public partial class CatAppDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttempt(Attempt instance);
    partial void UpdateAttempt(Attempt instance);
    partial void DeleteAttempt(Attempt instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertOption(Option instance);
    partial void UpdateOption(Option instance);
    partial void DeleteOption(Option instance);
    partial void InsertQuestion_category(Question_category instance);
    partial void UpdateQuestion_category(Question_category instance);
    partial void DeleteQuestion_category(Question_category instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertTest(Test instance);
    partial void UpdateTest(Test instance);
    partial void DeleteTest(Test instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public CatAppDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		

		
		public CatAppDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		
		public System.Data.Linq.Table<Android_metadata> Android_metadatas
		{
			get
			{
				return this.GetTable<Android_metadata>();
			}
		}
		
		public System.Data.Linq.Table<Attempt_detail> Attempt_details
		{
			get
			{
				return this.GetTable<Attempt_detail>();
			}
		}
		
		public System.Data.Linq.Table<Attempt> Attempts
		{
			get
			{
				return this.GetTable<Attempt>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}

		
		public System.Data.Linq.Table<Option> Options
		{
			get
			{
				return this.GetTable<Option>();
			}
		}
		
		public System.Data.Linq.Table<Question_category> Question_categories
		{
			get
			{
				return this.GetTable<Question_category>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<Test> Tests
		{
			get
			{
				return this.GetTable<Test>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="android_metadata")]
	public partial class Android_metadata
	{
		
		private string _Locale;
		
		public Android_metadata()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="locale", Storage="_Locale", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this._Locale = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="attempt_details")]
	public partial class Attempt_detail
	{
		
		private System.Nullable<long> _Q_id;
		
		private System.Nullable<long> _A_id;
		
		private System.Nullable<long> _O_id;
		
		private System.Nullable<bool> _Mark_flag;
		
		public Attempt_detail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="q_id", Storage="_Q_id", DbType="BigInt")]
		public System.Nullable<long> Q_id
		{
			get
			{
				return this._Q_id;
			}
			set
			{
				if ((this._Q_id != value))
				{
					this._Q_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="a_id", Storage="_A_id", DbType="BigInt")]
		public System.Nullable<long> A_id
		{
			get
			{
				return this._A_id;
			}
			set
            {
			
				if ((this._A_id != value))
				{
					this._A_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="o_id", Storage="_O_id", DbType="BigInt")]
		public System.Nullable<long> O_id
		{
			get
			{
				return this._O_id;
			}
			set
			{
				if ((this._O_id != value))
				{
					this._O_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mark_flag", Storage="_Mark_flag", DbType="Bit")]
		public System.Nullable<bool> Mark_flag
		{
			get
			{
				return this._Mark_flag;
			}
			set
			{
				if ((this._Mark_flag != value))
				{
					this._Mark_flag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="attempts")]
	public partial class Attempt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private long _U_id;
		
		private long _T_id;
		
		private int _Timpstamp;
		
		private System.Nullable<bool> _Complete;
		
		private System.Nullable<int> _Elapsed_time;
		
		private System.Nullable<bool> _Timed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnU_idChanging(long value);
    partial void OnU_idChanged();
    partial void OnT_idChanging(long value);
    partial void OnT_idChanged();
    partial void OnTimpstampChanging(int value);
    partial void OnTimpstampChanged();
    partial void OnCompleteChanging(System.Nullable<bool> value);
    partial void OnCompleteChanged();
    partial void OnElapsed_timeChanging(System.Nullable<int> value);
    partial void OnElapsed_timeChanged();
    partial void OnTimedChanging(System.Nullable<bool> value);
    partial void OnTimedChanged();
    #endregion
		
		public Attempt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="u_id", Storage="_U_id", DbType="BigInt NOT NULL")]
		public long U_id
		{
			get
			{
				return this._U_id;
			}
			set
			{
				if ((this._U_id != value))
				{
					this.OnU_idChanging(value);
					this.SendPropertyChanging();
					this._U_id = value;
					this.SendPropertyChanged("U_id");
					this.OnU_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="t_id", Storage="_T_id", DbType="BigInt NOT NULL")]
		public long T_id
		{
			get
			{
				return this._T_id;
			}
			set
			{
				if ((this._T_id != value))
				{
					this.OnT_idChanging(value);
					this.SendPropertyChanging();
					this._T_id = value;
					this.SendPropertyChanged("T_id");
					this.OnT_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="timpstamp", Storage="_Timpstamp", DbType="Int NOT NULL")]
		public int Timpstamp
		{
			get
			{
				return this._Timpstamp;
			}
			set
			{
				if ((this._Timpstamp != value))
				{
					this.OnTimpstampChanging(value);
					this.SendPropertyChanging();
					this._Timpstamp = value;
					this.SendPropertyChanged("Timpstamp");
					this.OnTimpstampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="complete", Storage="_Complete", DbType="Bit")]
		public System.Nullable<bool> Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="elapsed_time", Storage="_Elapsed_time", DbType="Int")]
		public System.Nullable<int> Elapsed_time
		{
			get
			{
				return this._Elapsed_time;
			}
			set
			{
				if ((this._Elapsed_time != value))
				{
					this.OnElapsed_timeChanging(value);
					this.SendPropertyChanging();
					this._Elapsed_time = value;
					this.SendPropertyChanged("Elapsed_time");
					this.OnElapsed_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="timed", Storage="_Timed", DbType="Bit")]
		public System.Nullable<bool> Timed
		{
			get
			{
				return this._Timed;
			}
			set
			{
				if ((this._Timed != value))
				{
					this.OnTimedChanging(value);
					this.SendPropertyChanging();
					this._Timed = value;
					this.SendPropertyChanged("Timed");
					this.OnTimedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _Name;
		
		private EntitySet<Question_category> _Question_categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Category()
		{
			this._Question_categories = new EntitySet<Question_category>(new Action<Question_category>(this.attach_Question_categories), new Action<Question_category>(this.detach_Question_categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__question_categories__0000000000000198", Storage="_Question_categories", ThisKey="_id", OtherKey="C_id", DeleteRule="NO ACTION")]
		public EntitySet<Question_category> Question_categories
		{
			get
			{
				return this._Question_categories;
			}
			set
			{
				this._Question_categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Question_categories(Question_category entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Question_categories(Question_category entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="options")]
	public partial class Option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _Content;
		
		private System.Nullable<long> _Q_id;
		
		private System.Nullable<bool> _Correct;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnQ_idChanging(System.Nullable<long> value);
    partial void OnQ_idChanged();
    partial void OnCorrectChanging(System.Nullable<bool> value);
    partial void OnCorrectChanged();
    #endregion
		
		public Option()
		{
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="content", Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="q_id", Storage="_Q_id", DbType="BigInt")]
		public System.Nullable<long> Q_id
		{
			get
			{
				return this._Q_id;
			}
			set
			{
				if ((this._Q_id != value))
				{
					this.OnQ_idChanging(value);
					this.SendPropertyChanging();
					this._Q_id = value;
					this.SendPropertyChanged("Q_id");
					this.OnQ_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="correct", Storage="_Correct", DbType="Bit")]
		public System.Nullable<bool> Correct
		{
			get
			{
				return this._Correct;
			}
			set
			{
				if ((this._Correct != value))
				{
					this.OnCorrectChanging(value);
					this.SendPropertyChanging();
					this._Correct = value;
					this.SendPropertyChanged("Correct");
					this.OnCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__options__00000000000001AA", Storage="_Question", ThisKey="Q_id", OtherKey="_id", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Options.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Options.Add(this);
						this._Q_id = value._id;
					}
					else
					{
						this._Q_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="question_categories")]
	public partial class Question_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Q_id;
		
		private long _C_id;
		
		private EntityRef<Question> _Question;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQ_idChanging(long value);
    partial void OnQ_idChanged();
    partial void OnC_idChanging(long value);
    partial void OnC_idChanged();
    #endregion
		
		public Question_category()
		{
			this._Question = default(EntityRef<Question>);
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="q_id", Storage="_Q_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Q_id
		{
			get
			{
				return this._Q_id;
			}
			set
			{
				if ((this._Q_id != value))
				{
					this.OnQ_idChanging(value);
					this.SendPropertyChanging();
					this._Q_id = value;
					this.SendPropertyChanged("Q_id");
					this.OnQ_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="c_id", Storage="_C_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long C_id
		{
			get
			{
				return this._C_id;
			}
			set
			{
				if ((this._C_id != value))
				{
					this.OnC_idChanging(value);
					this.SendPropertyChanging();
					this._C_id = value;
					this.SendPropertyChanged("C_id");
					this.OnC_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__question_categories__0000000000000194", Storage="_Question", ThisKey="Q_id", OtherKey="_id", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Question_categories.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Question_categories.Add(this);
						this._Q_id = value._id;
					}
					else
					{
						this._Q_id = default(long);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__question_categories__0000000000000198", Storage="_Category", ThisKey="C_id", OtherKey="_id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Question_categories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Question_categories.Add(this);
						this._C_id = value._id;
					}
					else
					{
						this._C_id = default(long);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="questions")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _Header;
		
		private string _Content;
		
		private string _Image_file;
		
		private string _Answer_text;
		
		private string _Image_file_ans;
		
		private string _Year;
		
		private string _Name;
		
		private System.Nullable<long> _T_id;
		
		private EntitySet<Option> _Options;
		
		private EntitySet<Question_category> _Question_categories;
		
		private EntityRef<Test> _Test;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnImage_fileChanging(string value);
    partial void OnImage_fileChanged();
    partial void OnAnswer_textChanging(string value);
    partial void OnAnswer_textChanged();
    partial void OnImage_file_ansChanging(string value);
    partial void OnImage_file_ansChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnT_idChanging(System.Nullable<long> value);
    partial void OnT_idChanged();
    #endregion
		
		public Question()
		{
			this._Options = new EntitySet<Option>(new Action<Option>(this.attach_Options), new Action<Option>(this.detach_Options));
			this._Question_categories = new EntitySet<Question_category>(new Action<Question_category>(this.attach_Question_categories), new Action<Question_category>(this.detach_Question_categories));
			this._Test = default(EntityRef<Test>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="header", Storage="_Header", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="content", Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="image_file", Storage="_Image_file", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Image_file
		{
			get
			{
				return this._Image_file;
			}
			set
			{
				if ((this._Image_file != value))
				{
					this.OnImage_fileChanging(value);
					this.SendPropertyChanging();
					this._Image_file = value;
					this.SendPropertyChanged("Image_file");
					this.OnImage_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="answer_text", Storage="_Answer_text", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Answer_text
		{
			get
			{
				return this._Answer_text;
			}
			set
			{
				if ((this._Answer_text != value))
				{
					this.OnAnswer_textChanging(value);
					this.SendPropertyChanging();
					this._Answer_text = value;
					this.SendPropertyChanged("Answer_text");
					this.OnAnswer_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="image_file_ans", Storage="_Image_file_ans", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Image_file_ans
		{
			get
			{
				return this._Image_file_ans;
			}
			set
			{
				if ((this._Image_file_ans != value))
				{
					this.OnImage_file_ansChanging(value);
					this.SendPropertyChanging();
					this._Image_file_ans = value;
					this.SendPropertyChanged("Image_file_ans");
					this.OnImage_file_ansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="year", Storage="_Year", DbType="NVarChar(10)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="t_id", Storage="_T_id", DbType="BigInt")]
		public System.Nullable<long> T_id
		{
			get
			{
				return this._T_id;
			}
			set
			{
				if ((this._T_id != value))
				{
					this.OnT_idChanging(value);
					this.SendPropertyChanging();
					this._T_id = value;
					this.SendPropertyChanged("T_id");
					this.OnT_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__options__00000000000001AA", Storage="_Options", ThisKey="_id", OtherKey="Q_id", DeleteRule="NO ACTION")]
		public EntitySet<Option> Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				this._Options.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__question_categories__0000000000000194", Storage="_Question_categories", ThisKey="_id", OtherKey="Q_id", DeleteRule="NO ACTION")]
		public EntitySet<Question_category> Question_categories
		{
			get
			{
				return this._Question_categories;
			}
			set
			{
				this._Question_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__questions__0000000000000186", Storage="_Test", ThisKey="T_id", OtherKey="_id", IsForeignKey=true)]
		public Test Test
		{
			get
			{
				return this._Test.Entity;
			}
			set
			{
				Test previousValue = this._Test.Entity;
				if (((previousValue != value) 
							|| (this._Test.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Test.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Test.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._T_id = value._id;
					}
					else
					{
						this._T_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Test");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_Question_categories(Question_category entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Question_categories(Question_category entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tests")]
	public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _Name;
		
		private int _Allowed_time;
		
		private EntitySet<Question> _Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAllowed_timeChanging(int value);
    partial void OnAllowed_timeChanged();
    #endregion
		
		public Test()
		{
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="allowed_time", Storage="_Allowed_time", DbType="Int NOT NULL")]
		public int Allowed_time
		{
			get
			{
				return this._Allowed_time;
			}
			set
			{
				if ((this._Allowed_time != value))
				{
					this.OnAllowed_timeChanging(value);
					this.SendPropertyChanging();
					this._Allowed_time = value;
					this.SendPropertyChanged("Allowed_time");
					this.OnAllowed_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__questions__0000000000000186", Storage="_Questions", ThisKey="_id", OtherKey="T_id", DeleteRule="NO ACTION")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Test = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Test = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long @__id;
		
		private string _Fullname;
		
		private string _Phoneno;
		
		private string _Email;
		
		private System.Nullable<bool> _Registered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnPhonenoChanging(string value);
    partial void OnPhonenoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRegisteredChanging(System.Nullable<bool> value);
    partial void OnRegisteredChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fullname", Storage="_Fullname", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="phoneno", Storage="_Phoneno", DbType="NVarChar(14)")]
		public string Phoneno
		{
			get
			{
				return this._Phoneno;
			}
			set
			{
				if ((this._Phoneno != value))
				{
					this.OnPhonenoChanging(value);
					this.SendPropertyChanging();
					this._Phoneno = value;
					this.SendPropertyChanged("Phoneno");
					this.OnPhonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_Email", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="registered", Storage="_Registered", DbType="Bit")]
		public System.Nullable<bool> Registered
		{
			get
			{
				return this._Registered;
			}
			set
			{
				if ((this._Registered != value))
				{
					this.OnRegisteredChanging(value);
					this.SendPropertyChanging();
					this._Registered = value;
					this.SendPropertyChanged("Registered");
					this.OnRegisteredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
